{"version":3,"file":"static/js/799.eb3fea5b.chunk.js","mappings":"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","sources":["components/ButtonLoader/ButtonLoader.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./buttonLoader.scss\";\r\n\r\nconst ButtonLoader = () => {\r\n    return(\r\n        <>\r\n            <span className=\"loader\"></span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ButtonLoader;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport api from \"../../axios/axios\";\r\nimport ButtonLoader from \"../ButtonLoader/ButtonLoader\";\r\n\r\nimport goodleImg from './images/google.png';\r\nimport facebookImg from './images/fb.png';\r\nimport yandexImg from './images/yandex.png';\r\nimport './loginform.scss';\r\n\r\nconst LoginForm = (props) => {\r\n    const {setIsLogged} = props;\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    \r\n    \r\n    const { register, formState: { errors }, reset, handleSubmit } = useForm();\r\n    function onSubmit(data) {\r\n        return api.post('/api/v1/account/login', data)\r\n        .then((response) => {\r\n            setIsLoading(true);\r\n            localStorage.setItem(\"token\", response.data.accessToken);\r\n            localStorage.setItem(\"expire\", response.data.expire);\r\n            setIsLogged(true);\r\n            reset();\r\n            toHomePage();\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            alert('Неверный логин или пароль');\r\n        })\r\n    }\r\n\r\n    const navigate = useNavigate();\r\n    function toHomePage() {\r\n        navigate('/');\r\n    }\r\n\r\n    const errorFormStyle = {\r\n        fontSize: '12px',\r\n        color: '#FF5959',\r\n        textAlign: 'center',\r\n        marginTop: '6px'\r\n    };\r\n  \r\n    return (\r\n      <form onSubmit={handleSubmit(onSubmit)} className='registration_container'>\r\n        <div className='form_header'>\r\n            <Link to='/login' className='form_header_links form_header_links_active'>Войти</Link>\r\n            <Link to='*' className='form_header_links'>Зарегистрироваться</Link>\r\n        </div>\r\n        <div className='form'>\r\n            <h3 className='form_text'>Логин или номер телефона: sf_student1</h3>\r\n            <input\r\n                {...register(\"login\", { required: true })} \r\n                aria-invalid={errors.text ? \"true\" : \"false\"} \r\n                type='text'\r\n            />\r\n            <div className='errors_form_string'>\r\n                {errors.login?.type === 'required' && <div style={errorFormStyle} role=\"alert\">Введите корректные данные</div>}\r\n            </div>\r\n\r\n            <h3 className='form_text'>Пароль: 4i2385j</h3>\r\n            <input \r\n                {...register(\"password\", { required: true })} \r\n                aria-invalid={errors.password ? \"true\" : \"false\"}\r\n                type=\"password\" \r\n            />\r\n            <div className='errors_form_string'>\r\n                {errors.password?.type === 'required' && <div style={errorFormStyle} role=\"alert\">Неправильный пароль</div>}\r\n            </div>\r\n\r\n            <button type='submit' className='form_button'>{isLoading ? (<ButtonLoader />) : 'Войти'}</button>\r\n            <Link to='*' className='form_restore_pass'>Восстановить пароль</Link>\r\n        </div>\r\n        <div className='form_links'>\r\n            <h3 className='form_text'>Войти через:</h3>\r\n            <div className='form_links_img'>\r\n                <img src={goodleImg} alt='google'/>\r\n                <img src={facebookImg} alt='facebook' />\r\n                <img src={yandexImg} alt='yandex' />\r\n            </div>\r\n        </div>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport \"./loginPage.scss\";\r\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\r\n\r\nimport registrImage from \"../../assets/images/Characters.jpg\";\r\nimport lockImg from \"../../assets/images/lock.png\";\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    return(\r\n        <>\r\n        <div className='container'>\r\n            <div className='registration_content'>\r\n                <div className='registration_text'>\r\n                    <h1 className='title registration_title'>\r\n                        Для оформления подписки на тариф, необходимо авторизоваться\r\n                    </h1>\r\n                      <img className='registration_image' src={registrImage} />\r\n                </div>\r\n                <div className='registration_form'>\r\n                  <img className='lock_img' src={lockImg} />\r\n                  <LoginForm {...props}/>\r\n                </div>\r\n                  <img className='registration_img_mobile' src={registrImage} />\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginPage"],"names":["_jsx","_Fragment","children","className","props","_errors$login","_errors$password","setIsLogged","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useForm","useForm","register","errors","formState","reset","handleSubmit","navigate","useNavigate","errorFormStyle","fontSize","color","textAlign","marginTop","_jsxs","onSubmit","data","api","then","response","localStorage","setItem","accessToken","expire","catch","error","console","log","alert","Link","to","_objectSpread","required","text","type","login","style","role","password","ButtonLoader","src","alt","registrImage","LoginForm"],"sourceRoot":""}