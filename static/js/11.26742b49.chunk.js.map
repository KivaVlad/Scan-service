{"version":3,"file":"static/js/11.26742b49.chunk.js","mappings":"6LAeaA,EAAa,SAACC,GACvB,IAAMC,EATY,SAACD,GACnB,OAAOE,EAAAA,EAAAA,QAAOF,EAClB,CAO2BG,CAAcH,GAC/BI,EAfe,SAACH,GACtB,IAAMI,EAASJ,EAAeK,MAAM,qBACpC,OAAOD,EAASA,EAAO,GAAK,IAChC,CAYkBE,CAAiBN,GAG/B,MAAO,CACHG,MAAAA,EACAI,QAXc,SAACA,GACnB,OAAOA,EAAQC,QAAQ,SAAU,IACrC,CAKoBC,CAAcT,GAAgBU,MAAM,EAAG,KAAO,SAMlE,E,SCWA,EA9BoB,SAAHC,GAAiB,IAAXC,EAAGD,EAAHC,IACDb,EAAYa,EAAvBL,QAAWR,OAClBc,EAA2Bf,EAAWC,GAA9BI,EAAKU,EAALV,MAAOI,EAAOM,EAAPN,QAEf,OACQO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAE3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,SAAEJ,EAAIM,UAAUC,OAAO,EAAE,IAAIC,MAAM,KAAKC,UAAUC,KAAK,QAC3FL,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,SAAEJ,EAAIW,OAAOC,WAGvDV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,CAAEJ,EAAIa,MAAMC,KAAKP,OAAO,EAAG,IAAI,WACpEF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,SAAC,kHACnCW,QAAQxB,IACLc,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAuBa,MAAO,CAAEC,gBAAgB,OAADC,OAAS3B,EAAK,SAE5Ec,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0BAEnBE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAsBgB,wBAAyB,CAAEC,OAAQzB,MAExEO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EAClCC,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,OAAO,SAASC,GAAIvB,EAAIwB,IAAKrB,UAAU,wBAAuBC,SAAC,wGACrEF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,uBAAsBC,SAAA,CAAEJ,EAAIyB,WAAWC,UAAU,4CAKrF,C","sources":["components/ResultCards/helper.js","components/ResultCards/ResultCards.jsx"],"sourcesContent":["import { decode } from \"html-entities\";\r\n\r\nconst getFirstImageUrl = (decodedContent) => {\r\n    const images = decodedContent.match(/<img src=\"(.*?)\"/m);\r\n    return images ? images[1] : null;\r\n};\r\n  \r\nconst decodeContent = (markup) => {\r\n    return decode(markup);\r\n};\r\n  \r\nconst removeAllTags = (content) => {\r\n    return content.replace(/<.*?>/g, ' ');\r\n};\r\n  \r\nexport const getContent = (markup) => {\r\n    const decodedContent = decodeContent(markup);\r\n    const bgUrl = getFirstImageUrl(decodedContent);\r\n    const content = removeAllTags(decodedContent).slice(0, 700) + '…';\r\n  \r\n    return {\r\n        bgUrl,\r\n        content,\r\n    };\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getContent } from \"./helper\";\r\nimport \"./resultCards.scss\";\r\n\r\nconst ResultCards = ({ doc }) => {\r\n    const {content: { markup }} = doc;\r\n    const { bgUrl, content } = getContent(markup);\r\n\r\n    return(\r\n            <div className=\"documents_card\">\r\n\r\n                <div className=\"documents_card_header\">\r\n                    <div className=\"documents_card_date\">{doc.issueDate.substr(0,10).split('-').reverse().join('-')}</div>\r\n                    <div className=\"documents_card_sourse\">{doc.source.name}</div>\r\n                </div>\r\n\r\n                <div className=\"documents_card_title\">{doc.title.text.substr(0, 70)} ...</div>\r\n                <div className=\"documents_card_tag\">Технические новости</div>\r\n                {Boolean(bgUrl) ?\r\n                    <div className=\"documents_card_image\" style={{ backgroundImage: `url(${bgUrl})` }}></div>\r\n                    :\r\n                    <div className=\"documents_card_image\"></div>\r\n                }\r\n                <div className=\"documents_card_text\" dangerouslySetInnerHTML={{ __html: content }} />\r\n\r\n                <div className=\"documents_card_footer\">\r\n                    <Link target='_blank' to={doc.url} className=\"documents_card_button\">Читать в источнике</Link>\r\n                    <span className=\"documents_card_words\">{doc.attributes.wordCount} слов(а)</span>\r\n                </div>\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ResultCards;"],"names":["getContent","markup","decodedContent","decode","decodeContent","bgUrl","images","match","getFirstImageUrl","content","replace","removeAllTags","slice","_ref","doc","_getContent","_jsxs","className","children","_jsx","issueDate","substr","split","reverse","join","source","name","title","text","Boolean","style","backgroundImage","concat","dangerouslySetInnerHTML","__html","Link","target","to","url","attributes","wordCount"],"sourceRoot":""}