{"version":3,"file":"static/js/799.a08b0817.chunk.js","mappings":"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","sources":["components/ButtonLoader/ButtonLoader.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./buttonLoader.scss\";\r\n\r\nconst ButtonLoader = () => {\r\n    return(\r\n        <>\r\n            <span className=\"loader\"></span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ButtonLoader;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport api from \"../../axios/axios\";\r\nimport ButtonLoader from \"../ButtonLoader/ButtonLoader\";\r\n\r\nimport goodleImg from './images/google.png';\r\nimport facebookImg from './images/fb.png';\r\nimport yandexImg from './images/yandex.png';\r\nimport './loginform.scss';\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    const {setIsLogged} = props;\r\n    const { register, formState: { errors }, reset, handleSubmit } = useForm();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorsForm, setErrorsFrom] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    async function onSubmit(data) {\r\n        setIsLoading(true);\r\n        await\r\n        api.post('/api/v1/account/login', data)\r\n        .then((response) => {\r\n            setIsLoading(false);\r\n            localStorage.setItem(\"token\", response.data.accessToken);\r\n            localStorage.setItem(\"expire\", response.data.expire);\r\n            setIsLogged(true);\r\n            reset();\r\n            navigate('/');\r\n            setIsLoading(false);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            setErrorsFrom(true);\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    const errorFormStyle = {\r\n        fontSize: '12px',\r\n        color: '#FF5959',\r\n        textAlign: 'center',\r\n        marginTop: '6px'\r\n    };\r\n  \r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className='registration_container'>\r\n\r\n            <div className='form_header'>\r\n                <Link to='/login' className='form_header_links form_header_links_active'>Войти</Link>\r\n                <Link to='*' className='form_header_links'>Зарегистрироваться</Link>\r\n            </div>\r\n\r\n            <div className='form'>\r\n                <h3 className='form_text'>Логин или номер телефона: sf_student1</h3>\r\n                <input\r\n                    {...register(\"login\", { required: true })} \r\n                    aria-invalid={errors.text ? \"true\" : \"false\"} \r\n                    type='text'\r\n                    autoComplete=\"off\"\r\n                />\r\n                <div className='errors_form_string'>\r\n                    {errors.login?.type === 'required' || errorsForm ? <div style={errorFormStyle} role=\"alert\">Введите корректные данные</div> : <></>}\r\n                </div>\r\n\r\n                <h3 className='form_text'>Пароль: 4i2385j</h3>\r\n                <input \r\n                    {...register(\"password\", { required: true })} \r\n                    aria-invalid={errors.password ? \"true\" : \"false\"}\r\n                    type=\"password\" \r\n                />\r\n                <div className='errors_form_string'>\r\n                    {errors.password?.type === 'required' || errorsForm ? <div style={errorFormStyle} role=\"alert\">Неправильный пароль</div> : <></>}\r\n                </div>\r\n\r\n                <button type='submit' className='form_button'>{isLoading ? (<ButtonLoader />) : 'Войти'}</button>\r\n                <Link to='*' className='form_restore_pass'>Восстановить пароль</Link>\r\n            </div>\r\n\r\n            <div className='form_links'>\r\n                <h3 className='form_text'>Войти через:</h3>\r\n                <div className='form_links_img'>\r\n                    <img src={goodleImg} alt='google'/>\r\n                    <img src={facebookImg} alt='facebook' />\r\n                    <img src={yandexImg} alt='yandex' />\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport \"./loginPage.scss\";\r\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\r\n\r\nimport registrImage from \"../../assets/images/Characters.jpg\";\r\nimport lockImg from \"../../assets/images/lock.png\";\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    return(\r\n        <section className=\"login_section\">\r\n            <div className='container'>\r\n                <div className='registration_content'>\r\n                    <div className='registration_text'>\r\n                        <h1 className='title registration_title'>\r\n                            Для оформления подписки на тариф, необходимо авторизоваться\r\n                        </h1>\r\n                        <img className='registration_image' src={registrImage} alt=\"\" />\r\n                    </div>\r\n                    <div className='registration_form'>\r\n                    <img className='lock_img' src={lockImg} alt=\"\" />\r\n                    <LoginForm {...props}/>\r\n                    </div>\r\n                    <img className='registration_img_mobile' src={registrImage} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default LoginPage"],"names":["_jsx","_Fragment","children","className","props","_errors$login","_errors$password","setIsLogged","_useForm","useForm","register","errors","formState","reset","handleSubmit","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","errorsForm","setErrorsFrom","navigate","useNavigate","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","api","then","response","localStorage","setItem","accessToken","expire","catch","error","console","log","stop","apply","arguments","errorFormStyle","fontSize","color","textAlign","marginTop","_jsxs","onSubmit","_x","Link","to","_objectSpread","required","text","type","autoComplete","login","style","role","password","ButtonLoader","src","alt","registrImage","LoginForm"],"sourceRoot":""}