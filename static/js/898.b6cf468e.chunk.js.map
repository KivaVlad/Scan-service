{"version":3,"file":"static/js/898.b6cf468e.chunk.js","mappings":"sMAeaA,EAAa,SAACC,GACvB,IAAMC,EATY,SAACD,GACnB,OAAOE,EAAAA,EAAAA,QAAOF,EAClB,CAO2BG,CAAcH,GAC/BI,EAfe,SAACH,GACtB,IAAMI,EAASJ,EAAeK,MAAM,qBACpC,OAAOD,EAASA,EAAO,GAAK,IAChC,CAYkBE,CAAiBN,GAG/B,MAAO,CACHG,MAAAA,EACAI,QAXc,SAACA,GACnB,OAAOA,EAAQC,QAAQ,SAAU,IACrC,CAKoBC,CAAcT,GAAgBU,MAAM,EAAG,KAAO,SAMlE,E,SCaA,EAhCoB,SAAHC,GAAiB,IAAXC,EAAGD,EAAHC,IACDb,EAAYa,EAAvBL,QAAWR,OAClBc,EAA2Bf,EAAWC,GAA9BI,EAAKU,EAALV,MAAOI,EAAOM,EAAPN,QAEf,OACQO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,SAAEJ,EAAIM,UAAUC,OAAO,EAAE,OAC7DL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,CAAEJ,EAAIQ,OAAOC,KAAKF,OAAO,EAAG,IAAI,cAE1EL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,CAAEJ,EAAIU,MAAMC,KAAKJ,OAAO,EAAG,IAAI,WACpEF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,SAAC,kHAEnCQ,QAAQrB,IACLc,EAAAA,EAAAA,KAAA,OACIF,UAAU,uBACVU,MAAO,CAAEC,gBAAgB,OAADC,OAASxB,EAAK,SAI1Cc,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0BAGnBE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAsBa,wBAAyB,CAAEC,OAAQtB,MACxEO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EAClCC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACC,OAAO,SAASC,GAAIpB,EAAIqB,IAAKlB,UAAU,wBAAuBC,SAAC,wGACrEF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,uBAAsBC,SAAA,CAAEJ,EAAIsB,WAAWC,UAAU,4CAIrF,ECjBA,EAdyB,SAACC,GACtB,IAAOC,EAAaD,EAAbC,UAEP,OACIpB,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,CAAAtB,SACKqB,EAAUE,KAAI,SAAC3B,GACZ,OACIK,EAAAA,EAAAA,KAACuB,EAAW,CAAiB5B,IAAKA,EAAI6B,IAApB7B,EAAI6B,GAAGC,GAEjC,KAGZ,C","sources":["components/ResultCards/helper.js","components/ResultCards/ResultCards.jsx","components/ResultsDocuments/ResultsDocuments.jsx"],"sourcesContent":["import { decode } from \"html-entities\";\r\n\r\nconst getFirstImageUrl = (decodedContent) => {\r\n    const images = decodedContent.match(/<img src=\"(.*?)\"/m);\r\n    return images ? images[1] : null;\r\n};\r\n  \r\nconst decodeContent = (markup) => {\r\n    return decode(markup);\r\n};\r\n  \r\nconst removeAllTags = (content) => {\r\n    return content.replace(/<.*?>/g, ' ');\r\n};\r\n  \r\nexport const getContent = (markup) => {\r\n    const decodedContent = decodeContent(markup);\r\n    const bgUrl = getFirstImageUrl(decodedContent);\r\n    const content = removeAllTags(decodedContent).slice(0, 700) + '…';\r\n  \r\n    return {\r\n        bgUrl,\r\n        content,\r\n    };\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getContent } from \"./helper\";\r\nimport \"./resultCards.scss\";\r\n\r\nconst ResultCards = ({ doc }) => {\r\n    const {content: { markup }} = doc;\r\n    const { bgUrl, content } = getContent(markup);\r\n\r\n    return(\r\n            <div className=\"documents_card\">\r\n                <div className=\"documents_card_header\">\r\n                    <div className=\"documents_card_date\">{doc.issueDate.substr(0,10)}</div>\r\n                    <div className=\"documents_card_sourse\">{doc.source.name.substr(0, 30)} ...</div>\r\n                </div>\r\n                <div className=\"documents_card_title\">{doc.title.text.substr(0, 70)} ...</div>\r\n                <div className=\"documents_card_tag\">Технические новости</div>\r\n\r\n                {Boolean(bgUrl) ? (\r\n                    <div \r\n                        className=\"documents_card_image\"\r\n                        style={{ backgroundImage: `url(${bgUrl})` }}\r\n                    ></div>\r\n                )\r\n                :\r\n                    <div className=\"documents_card_image\"></div>\r\n                }\r\n\r\n                <div className=\"documents_card_text\" dangerouslySetInnerHTML={{ __html: content }} />\r\n                <div className=\"documents_card_footer\">\r\n                    <Link target='_blank' to={doc.url} className=\"documents_card_button\">Читать в источнике</Link>\r\n                    <span className=\"documents_card_words\">{doc.attributes.wordCount} слов(а)</span>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ResultCards;","import React from \"react\";\r\nimport \"../../pages/ResultPage/result.scss\";\r\nimport ResultCards from \"../ResultCards/ResultCards\";\r\n\r\nconst ResultsDocuments = (props) => {\r\n    const {documents} = props;\r\n\r\n    return(\r\n        <>\r\n            {documents.map((doc) => {\r\n                return(\r\n                    <ResultCards key={doc.ok.id} doc={doc.ok}/>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResultsDocuments;"],"names":["getContent","markup","decodedContent","decode","decodeContent","bgUrl","images","match","getFirstImageUrl","content","replace","removeAllTags","slice","_ref","doc","_getContent","_jsxs","className","children","_jsx","issueDate","substr","source","name","title","text","Boolean","style","backgroundImage","concat","dangerouslySetInnerHTML","__html","Link","target","to","url","attributes","wordCount","props","documents","_Fragment","map","ResultCards","ok","id"],"sourceRoot":""}