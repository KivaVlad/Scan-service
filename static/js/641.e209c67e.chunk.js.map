{"version":3,"file":"static/js/641.e209c67e.chunk.js","mappings":"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","sources":["components/ResultSlider/ResultSlider.jsx","components/Pagination/Pagination.jsx","pages/ResultPage/Result.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nimport \"./resultSlider.scss\";\r\nimport arrowLeft from \"../carousel/items/arrow-left.png\";\r\nimport arrowRight from \"../carousel/items/arrow-right.png\";\r\n\r\nconst ResultSlider = (props) => {\r\n    const {totalDocs, riskFactors, setTotalDocs, setRiskFactors} = props;\r\n    const slider = useRef(null);\r\n    let position = 0;\r\n    \r\n\r\n    useEffect(() => {\r\n        if(localStorage.getItem('totalDocs') !== null) {\r\n            setTotalDocs(JSON.parse(localStorage.getItem('totalDocs')));\r\n        }\r\n    },[setTotalDocs]);\r\n\r\n    useEffect(() => {\r\n        if(localStorage.getItem('riskFactors') !== null) {\r\n            setRiskFactors(JSON.parse(localStorage.getItem('riskFactors')));\r\n        } else {\r\n          setRiskFactors();\r\n        }\r\n    },[setRiskFactors]);\r\n        \r\n    // Слайдер\r\n    const prevHandler = () => {\r\n        position += 150\r\n        slider.current.childNodes.forEach((element) => {\r\n            element.style = `transform: translateX(${position}px)`\r\n        })\r\n    }\r\n\r\n    const nextHandler = () => {\r\n        position -= 150\r\n        slider.current.childNodes.forEach((element) => {\r\n            element.style = `transform: translateX(${position}px)`\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"slider_section\">\r\n\r\n            <button onClick={prevHandler} className=\"slider_section_button\"><img src={arrowLeft} alt=\"\"/></button>\r\n\r\n            <div className=\"slider_container\">\r\n                <div className=\"slider_container_info\">\r\n                    <span className=\"slider_container_info_text\">Период</span>\r\n                    <span className=\"slider_container_info_text\">Всего</span>\r\n                    <span className=\"slider_container_info_text\">Риски</span>\r\n                </div>\r\n                <div ref={slider} className=\"slider_wrapper\">\r\n                    {totalDocs.map((element, id) => {\r\n                        return(\r\n                            <div className=\"slider_res_content\" key={id}>\r\n                                <div className=\"slider_res_content_text\">{element.date.substr(0, 10)}</div>\r\n                                <div className=\"slider_res_content_text\">{element.value}</div>\r\n                                <div className=\"slider_res_content_text\">{riskFactors[id].value}</div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            <button onClick={nextHandler} className=\"slider_section_button\"><img src={arrowRight} alt=\"\"/></button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultSlider;","import React, { useState } from \"react\";\r\nimport \"./pagination.scss\";\r\n\r\n\r\nconst Pagination = (props) => {\r\n    const { documentsPerPage, totalDocuments, paginate} = props;\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalDocuments / documentsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n\r\n    const [isScrolling, setIsScrolling] = useState(false);\r\n\r\n    const handleScroll = () => {\r\n        if(!isScrolling) {\r\n            window.scrollTo(0, 0);\r\n            setIsScrolling(true);\r\n        } else {\r\n            window.scrollTo(0, 0);\r\n            setIsScrolling(false);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"pagination\">\r\n            {\r\n                pageNumbers.map((number) => (\r\n                    <div className=\"pagination_item\" key={number}>\r\n                        <button \r\n                            className=\"pagination_btn\"\r\n                            onClick={() => {\r\n                                handleScroll();\r\n                                paginate(number);\r\n                            }} \r\n                        >\r\n                            {number}\r\n                        </button>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React, { useState, useEffect, lazy, Suspense } from \"react\";\r\nimport \"./result.scss\";\r\nimport resultImage from \"../../assets/images/result-image-hero.png\";\r\nimport ResultSlider from \"../../components/ResultSlider/ResultSlider\";\r\nimport { Loader } from \"../../components/loader/Loader\";\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\n\r\nconst ResultsDocuments = lazy(() => import('../../components/ResultsDocuments/ResultsDocuments'));\r\n\r\n\r\nconst Result = (props) => {\r\n    const {totalDocs, riskFactors, documents, setTotalDocs, setRiskFactors, setDocuments} = props;\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [documentsPerPage] = useState(10);\r\n    const lastDocIndex = currentPage * documentsPerPage;\r\n    const firstDocIndex = lastDocIndex - documentsPerPage;\r\n    const currentDoc = documents.slice(firstDocIndex, lastDocIndex);\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    useEffect(() => {\r\n        if(localStorage.getItem('documents') !== null) {\r\n            setDocuments(JSON.parse(localStorage.getItem('documents')));\r\n        }\r\n    }, [setDocuments]);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"container\">\r\n\r\n                <div className=\"result_header\">\r\n                    <div className=\"result_header_text\">\r\n                        <h1 className=\"title result_title\">Ищем. Скоро будут результаты</h1>\r\n                        <p className=\"result_subtitle\">Поиск может занять некоторое время, просим сохранять терпение.</p>\r\n                    </div>\r\n                    <div className=\"result_hero_img\">\r\n                        <img className=\"result_img\" src={resultImage} alt=\"img\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"result_main\">\r\n                    <div className=\"title list_title\">Общая сводка</div>\r\n                    <span className=\"list_subtitle\">Найдено  {documents?.length} вариантов</span>\r\n\r\n                    <div className=\"result_data_slider\">\r\n                        <ResultSlider totalDocs={totalDocs} riskFactors={riskFactors} setTotalDocs={setTotalDocs} setRiskFactors={setRiskFactors} />\r\n                    </div>\r\n\r\n                    <h1 className=\"title list_title\">Список документов</h1>\r\n\r\n                    {documents?.length > 0 &&\r\n                        <>\r\n                            <div className=\"documents_results_container\">\r\n                                <Suspense fallback={<div className=\"lazy_container\"><Loader /></div>}>\r\n                                    <ResultsDocuments documents={currentDoc} />\r\n                                </Suspense>\r\n                            </div>\r\n\r\n                            <Pagination documentsPerPage={documentsPerPage} totalDocuments={documents.length} paginate={paginate} />\r\n                        </>\r\n                    }\r\n                     \r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Result;"],"names":["props","totalDocs","riskFactors","setTotalDocs","setRiskFactors","slider","useRef","position","useEffect","localStorage","getItem","JSON","parse","_jsxs","className","children","_jsx","onClick","current","childNodes","forEach","element","style","concat","src","alt","ref","map","id","date","substr","value","documentsPerPage","totalDocuments","paginate","pageNumbers","i","Math","ceil","push","_useState","useState","_useState2","_slicedToArray","isScrolling","setIsScrolling","number","window","scrollTo","ResultsDocuments","lazy","documents","setDocuments","currentPage","setCurrentPage","_useState3","lastDocIndex","firstDocIndex","currentDoc","slice","_Fragment","resultImage","length","ResultSlider","Suspense","fallback","Loader","Pagination","pageNumber"],"sourceRoot":""}